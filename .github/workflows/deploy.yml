# name: Deploy to EC2

# on:
#   push:
#     branches: [ "main" ]

# good jobss:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository (optional)
#         uses: actions/checkout@v2

#       - name: Install Docker Compose on EC2
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             # Ensure /usr/local/bin directory exists
#             sudo mkdir -p /usr/local/bin
            
#             # Update packages
#             sudo apt-get update -y
            
#             # Install curl if not present
#             sudo apt-get install -y curl
            
#             # Install docker-compose
#             sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" \
#                  -o /usr/local/bin/docker-compose
#             sudo chmod +x /usr/local/bin/docker-compose
#             docker-compose --version

#       - name: Deploy via SSH
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             cd /home/ubuntu/fastapi_project
#             docker-compose pull
#             docker-compose down
#             docker-compose up -d --build
#             docker-compose ps



# name: Deploy to EC2

# on:
#   push:
#     branches: [ "main" ]

# jobs:
#   deploy:
#     # Run directly on self-hosted runner (the one we configured on EC2)
#     runs-on: self-hosted

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
      
#       - name: Show environment
#         run: env
#        #Later add the steps for docker build,login and push from the github folder
#       - name: Pull and Run Containers
#         working-directory: /home/ubuntu/fastapi_project
#         run: |
#           # Pull updated images
#           docker-compose pull
#           # Stop any running containers
#           docker-compose down
#           # Rebuild and run containers in detached mode
#           docker-compose up -d --build
#           # Show running containers
#           docker-compose ps
      
#       - name: Show Ngrok Logs
#         working-directory: /home/ubuntu/fastapi_project
#         run: |
#           # Display ngrok logs to get the public URL
#           docker-compose logs ngrok

name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    # Run directly on self-hosted runner (the one configured on EC2)
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Show environment
        run: env

      - name: Pull and Run Containers
        working-directory: /home/ubuntu/fastapi_project
        run: |
          # Stop all running containers and remove orphans
          docker-compose down --remove-orphans
          # Force remove any lingering networks
          docker network prune -f
          # Rebuild and run containers with the updated compose file
          docker-compose up -d --build
          # Show running containers
          docker-compose ps

      # - name: Pull and Run Containers
      #   working-directory: /home/ubuntu/fastapi_project
      #   run: |
      #     # Stop all running containers
      #     docker-compose down
      #     # Force remove the network if it still exists
      #     docker network rm fastapi_project_default || true
      #     # Rebuild and run containers in detached mode
      #     docker-compose up -d --build
      #     # Show running containers
      #     docker-compose ps

 

      - name: Show Nginx Logs
        working-directory: /home/ubuntu/fastapi_project
        run: |
          # Display Nginx logs to verify deployment
          docker logs $(docker ps -q --filter "ancestor=nginx")

